{"version":3,"file":"static/webpack/static/development/pages/update.js.5fb3e2b0f14bc0cd851d.hot-update.js","sources":["webpack:///./components/Posts/update.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation, Query } from 'react-apollo';\nimport Router from 'next/router';\nimport gql from 'graphql-tag';\nimport Form from '../styled/Form';\nimport Error from '../ErrorMessage';\nimport { object } from 'prop-types';\n\nconst SINGLE_POST_QUERY = gql`\nquery SINGLE_POST_QUERY($id: ID!) {\n    post(where: { id: $id}) {\n        id\n        title\n        image\n        description\n        tags {\n            id\n            hash\n        }\n    }\n}\n`;\n\nconst UPDATE_POST_MUTATION = gql`\n    mutation UPDATE_POST_MUTATION(\n        $id: ID!\n        $title: String\n        $description: String\n    ){ updatePost(\n            id: $id\n            title: $title\n            description: $description\n        ){\n            id\n            title\n            description\n            tags {\n                id\n            }\n        }\n    }\n`;\n\nclass UpdatePost extends Component {\n\n    state = {};\n\n    updatePost = async (e, updatePostMutation) => {\n        e.preventDefault();\n\n        const res = await updatePostMutation({\n            variables: {\n                id: this.props.id,\n                ...this.state\n            }\n        })\n    }\n\n    handleChange = (e) => {\n        const { name, type, value } = e.target;\n        const val = type === 'number' ? parseFloat(value) : value;\n        this.setState({ [name]: val })\n    }\n\n\n    render() {\n        return (\n            <Query query={SINGLE_POST_QUERY} variables={{ id: this.props.id }}>\n                {(data, loading) => {\n\n\n                    if (loading) return <p>Loading...</p>;\n                    if (!data.data.post) return <p>ERROR! Post ID not found</p>;\n\n                    return (\n\n                        <Mutation mutation={UPDATE_POST_MUTATION} variables={this.state}>\n                            {(updatePost, { loading, error }) => (\n                                <Form onSubmit={e => this.updatePost(e, updatePost)}>\n                                    <Error error={error} />\n                                    <fieldset disabled={loading} aria-busy={loading}>\n\n                                        <img src={data.data.post.image} alt={data.data.post.title} />\n                                        <label htmlFor=\"title\">\n                                            Title\n                    <input\n                                                type=\"text\"\n                                                id=\"title\"\n                                                name=\"title\"\n                                                placeholder=\"Title\"\n                                                required\n                                                defaultValue={data.data.post.title}\n                                                onChange={this.handleChange}\n                                                required />\n                                        </label>\n                                        <label htmlFor=\"description\">\n                                            Description\n                    <textarea\n                                                id=\"description\"\n                                                name=\"description\"\n                                                placeholder=\"Enter a description\"\n                                                defaultValue={data.data.post.description}\n                                                onChange={this.handleChange}\n                                                required />\n                                        </label>\n                                        <button type=\"submit\">Sav{loading ? 'ing' : 'e'} Changes</button>\n                                    </fieldset>\n                                </Form>\n                            )}\n                        </Mutation>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nexport default UpdatePost;\nexport { UPDATE_POST_MUTATION };\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAeA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AAEA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAIA;AACA;AADA;AADA;AACA;AAJA;AAGA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AAkCA;AAGA;;;;AAvEA;AACA;AAyEA;;;;;A","sourceRoot":""}